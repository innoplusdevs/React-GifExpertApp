{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","length","cats","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","console","log","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC5B,EAAoCC,qBAApC,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAS,IACtBP,GAAc,SAACQ,GAAD,OAAWN,GAAX,mBAA0BM,OACxCL,EAAc,MAKhB,SACE,uBAAOM,KAAK,OAAOC,MAAOR,EAAYS,SAfhB,SAACN,GACzBF,EAAcE,EAAEO,OAAOF,QAc8CG,YAAY,8D,+BCrBxEC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEfC,EAFe,0DAE0CC,UAAUH,GAFpD,sDAGFI,MAAMF,GAHJ,cAGfG,EAHe,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVjB,kBAcdM,GAdc,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEnC,OACE,sBAAKc,UAAU,yCAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHGO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAExB,ECH0B,SAACA,GAE3B,MAA0Bd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACRxB,EAAQC,GACLwB,MAAK,SAAAC,GACJH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAGd,CAACpB,IAEGqB,EDd2BK,CAAa1B,GAAjCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAMtB,OAJAO,QAAQC,IAAIR,GAKV,qCACE,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAEIH,EAAOJ,KAAI,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEMA,GADCA,EAAIC,aElBVkB,EAAe,WAC1B,MAAoC3C,mBAAS,IAA7C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAEA,OACE,qCACE,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEI6C,EAAWrB,KAAI,SAACT,GAAD,OACb,cAAC,EAAD,CAEEA,SAAUA,GADLA,Y,MCVnB+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.56a785cb.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState();\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.length > 2) {\r\n      setCategories((cats) => [inputValue, ...cats]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} placeholder=\"Introduzca el nombre del gif a buscar y presione enter\"/>\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async (category) => {\r\n\r\n  const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(category)}&api_key=TMyjCwpvoY9fLkQeOkuMI13XPSLRsHwh`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map(img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n  });\r\n\r\n  return gifs;\r\n};\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const { data: images, loading } = useFetchGifs(category); //data:images se usa para renombrar data\r\n\r\n  console.log(loading);\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n      {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n\r\n      <div className=\"card-grid\">\r\n        {\r\n          images.map(img => (\r\n            <GifGridItem\r\n              key={img.id}\r\n              {...img} //envio cada propiedad de img como una propiedad independiente\r\n            />\r\n\r\n          ))\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category)\r\n      .then(imgs => {\r\n        setState({\r\n          data: imgs,\r\n          loading: false\r\n        })\r\n      }); // = (category).then(imgs => setImages(imgs)) ->se pasa un solo parametro\r\n  }, [category]);\r\n\r\n  return state; // {data:[], loading: true};\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./Components/AddCategory\";\r\nimport { GifGrid } from \"./Components/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  return (\r\n    <>\r\n      <h2> GifExpertApp </h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n      <ol>\r\n        {\r\n          categories.map((category) => (\r\n            <GifGrid\r\n              key={category}\r\n              category={category} />\r\n          ))\r\n        }\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}